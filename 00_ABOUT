#!/usr/bin/env bash
#> Что это за проект вообще:
#>> Анализируя зеропикселный трафик (см. 20), 
#>> получаем переходы на сайты рекламодателей в разрезе по каналам (см 30), 
#>> а так же их лиды по каналам (см 40).
#>> Отчеты формируются в 50.

PATH=$PATH:/usr/local/rle/var/share3/TIKETS/bike # путь к 'bike'
export PATH
cd `dirname $0`
set -u

# Что-бы не писать wiki, которая сразу же устареет, здесь используется генерация документации из скриптов.
# Структура документации:
# помеченное '#' - простой комментарий внутри скрипта - для программиста заглядывающего внутрь.
# помеченное '#>' - комментарий для программиста, который не хотел бы заглядывать внутрь.
# помеченное "#>>" -комментарий для пользователя, посняющий "как оно считается"
# если в bash-скрипте объявляется переменная docvars в bash-синтаксисе:
# docvars="var1 var2 ..." - то документатор 'doc' все указанные в ней имена переменных добавляет в документацию, если они объявлены в тексте скрипта.
# синтаксис их объявления д.б. такой:
# var1="value1" # комментарий

#> Для генерации документации по проекту в формате "markdown" - запустить данный скрипт
docvars="readme_admin readme_user" # переменные из данного списка попадут в доку по этому скрипту
readme_admin="./Readme-admin.md" # файл, в котором сохраняется дока по проекту для админа
readme_user="./Readme-user.md" # файл, в который генерится дока по форматам отчетов.
varlistname="docvars" # ключевая переменная, объявляющая какие переменные в скрипте попадут в доку

doc -gfm -docvars="$varlistname" * | viatmp "$readme_admin" # генерирует более подробную доку (админскую)
doc -gfm --select_level=2 50_rep_[0-9][0-9]* | viatmp "$readme_user" # Юзерская дока