package Dom;

sub d2l{
 #> Перевод домена (1-параметр, строка) в домен 2-го уровня
 #> Второй параметр - опции { d3l => ["regexp1","regexp2",...] }

 my ( $dom, $opt ) = @_;
 my $rv;
 $dom =~ s/^\s+|\s+$//g; # spaces
 #>  попадающие под регексп - переводятся в 3-й уровень.
 if ( $opt->{d3l} ){
    my $to3l;
    # домены 3 уровня
    for my $re ( @{ $opt->{d3l} } ){
	 if ( $dom=~m/$re/ ){
	    $to3l = 1;
	    last
	}
    }
    if ( $to3l ){
	($rv) = $dom=~m/([^\.]*\.?[^\.]+\.[^\.]+)$/;
    }
 }
 if ( !$rv ){
    ($rv) = $dom=~m/([^\.]+\.[^\.]+)$/;
 }    

 #> Для всех производится очистка от порта, протокола, пути, пробелов
 $rv=~s|\w+\://||; # delete protocol
 $rv=~s|\:\d+||; # delete port
 $rv=~s|\/.*$||; # deplete path
 return $rv||"";
}

sub d3l{
 #> Перевод домена (1-параметр, строка) в домен 3-го уровня

 my ( $dom, $opt ) = @_;
 my $rv;
 $dom =~ s/^\s+|\s+$//g; # spaces
 ($rv) = $dom=~m/([^\.]*\.?[^\.]+\.[^\.]+)$/;

 #> Для всех производится очистка от порта, протокола, пути, пробелов
 $rv=~s|\w+\://||; # delete protocol
 $rv=~s|\:\d+||; # delete port
 $rv=~s|\/.*$||; # deplete path
 return $rv||"";
}

sub split_ref{
 # Split http://ya.ru/video to domain(ya.ru) and path(/video)
 # OLD: $_[0]=~m|^\'?(?:.+?\://)?(?:www\.)?([^/\']+)([^\']+?)?\'?$|;
 # old- глючил когда в середине есть кавычка
 $_[0]=~m|^\'?(?:.+?\://)?(?:www\.)?([^/\']+)(.+?)?\'?$|;
 return ($1,$2);
}
   

1;